<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <OutputType>Exe</OutputType>
        <TargetFramework>net8.0</TargetFramework>
        <AssemblyName>Miningcore</AssemblyName>
        <RootNamespace>Miningcore</RootNamespace>
        <ServerGarbageCollection>true</ServerGarbageCollection>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <ImplicitUsings>true</ImplicitUsings>
    </PropertyGroup>

    <PropertyGroup>
        <IsWindows Condition="'$(OS)' == 'Windows_NT'">true</IsWindows>
        <IsLinux Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::Linux)))' == 'true'">true</IsLinux>
        <IsOSX Condition="'$([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX)))' == 'true'">true</IsOSX>
    </PropertyGroup>

    <ItemGroup>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
            <_Parameter1>$(AssemblyName).Tests</_Parameter1>
        </AssemblyAttribute>
    </ItemGroup>

    <ItemGroup>
        <Compile Remove="Api\Notifications\**" />
        <Compile Remove="Blockchain\Bitcoin\Transactions\**" />
        <Compile Remove="DataAccess\**" />
        <Compile Remove="Maintenance\**" />
        <EmbeddedResource Remove="Api\Notifications\**" />
        <EmbeddedResource Remove="Blockchain\Bitcoin\Transactions\**" />
        <EmbeddedResource Remove="DataAccess\**" />
        <EmbeddedResource Remove="Maintenance\**" />
        <None Remove="Api\Notifications\**" />
        <None Remove="Blockchain\Bitcoin\Transactions\**" />
        <None Remove="DataAccess\**" />
        <None Remove="Maintenance\**" />
        <None Update="config-bitcoincash-mainnet.json">
          <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="config-backup.json">
          <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
        <None Update="config.json">
          <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <ItemGroup>
        <None Remove="config2.json" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="AspNetCoreRateLimit" Version="5.0.0" />
        <PackageReference Include="Autofac" Version="8.2.0" />
        <PackageReference Include="Autofac.Extensions.DependencyInjection" Version="10.0.0" />
        <PackageReference Include="CircularBuffer" Version="1.4.0" />
        <PackageReference Include="GitVersion.MsBuild" Version="6.1.0">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.IO.RecyclableMemoryStream" Version="3.0.1" />
        <PackageReference Include="Newtonsoft.Json.Schema" Version="4.0.1" />
        <PackageReference Include="Npgsql" Version="9.0.2" />
        <PackageReference Include="NSwag.AspNetCore" Version="14.2.0" />
        <PackageReference Include="NSwag.CodeGeneration.CSharp" Version="14.2.0" />
        <PackageReference Include="NSwag.MSBuild" Version="14.2.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="NLog.Extensions.Hosting" Version="5.4.0" />
        <PackageReference Include="AutoMapper" Version="13.0.1" />
        <PackageReference Include="Dapper" Version="2.1.66" />
        <PackageReference Include="FluentValidation" Version="11.11.0" />
        <PackageReference Include="FluentValidation.AspNetCore" Version="11.3.0" />
        <PackageReference Include="FluentValidation.DependencyInjectionExtensions" Version="11.11.0" />
        <PackageReference Include="JetBrains.Annotations" Version="2024.3.0" />
        <PackageReference Include="MailKit" Version="4.10.0" />
        <PackageReference Include="McMaster.Extensions.CommandLineUtils" Version="4.1.1" />
        <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="9.0.1" />
        <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="9.0.1" />
        <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="9.0.1" />
        <PackageReference Include="NBitcoin" Version="8.0.4" />
        <PackageReference Include="NBitcoin.Altcoins" Version="4.0.4" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
        <PackageReference Include="NLog" Version="5.4.0" />
        <PackageReference Include="NLog.Extensions.Logging" Version="5.4.0" />
        <PackageReference Include="Polly" Version="8.5.2" />
        <PackageReference Include="prometheus-net.AspNetCore" Version="8.2.1" />
        <PackageReference Include="prometheus-net" Version="8.2.1" />
        <PackageReference Include="protobuf-net" Version="3.2.46" />
        <PackageReference Include="Sentry.AspNetCore" Version="5.1.1" />
        <PackageReference Include="System.Diagnostics.Process" Version="4.3.0" />
        <PackageReference Include="System.Reactive" Version="6.0.1" />
    </ItemGroup>

    <ItemGroup>
        <Reference Include="WebSocketManager">
            <HintPath>..\..\libs\WebSocketManager.dll</HintPath>
        </Reference>
        <Reference Include="WebSocketManager.Common">
            <HintPath>..\..\libs\WebSocketManager.Common.dll</HintPath>
        </Reference>
        <Reference Include="ZeroMQ">
            <HintPath>..\..\libs\ZeroMQ.dll</HintPath>
        </Reference>
    </ItemGroup>

    <ItemGroup>
        <None Update="coins.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <!-- Reference pre-built library binaries on Windows  -->
    <ItemGroup Condition="'$(IsWindows)' == 'true'">
        <NativeLibs Include="$(ProjectDir)..\..\libs\runtimes\win-x64\*.dll" />
        <None Include="@(NativeLibs)" Visible="False">
            <Link>%(RecursiveDir)%(FileName)%(Extension)</Link>
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
      <None Remove="schema.json" />
      <Content Include="config.schema.json">
        <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      </Content>
    </ItemGroup>

    <!-- Build library binaries from source on Linux - Commented for now since we don't support other algorithms -->
<!--    <Target Name="BuildNativeLibsLinux" AfterTargets="AfterBuild" Condition="'$(IsLinux)' == 'true'">-->
<!--        <Exec Command="(cd $(ProjectDir) &amp;&amp; sh build-libs-linux.sh $(OutDir))" />-->
<!--    </Target>-->

    <!-- Include library binaries in publish on Windows -->
    <Target Name="NativeLibsPublishIncludeWin" BeforeTargets="PrepareForPublish" Condition="'$(IsWindows)' == 'true'">
        <ItemGroup>
            <Libs Include="$(ProjectDir)..\..\libs\runtimes\win-x64\*.dll" />
            <ContentWithTargetPath Include="@(Libs->'%(FullPath)')" RelativePath="%(Libs.Identity)" TargetPath="%(Libs.Filename)%(Libs.Extension)" CopyToPublishDirectory="PreserveNewest" />
        </ItemGroup>
    </Target>

    <!-- Include library binaries in publish on Linux -->
    <Target Name="NativeLibsPublishIncludeLinux" BeforeTargets="PrepareForPublish" Condition="'$(IsLinux)' == 'true'">
        <ItemGroup>
            <Libs Include="$(OutDir)*.so" />
            <ContentWithTargetPath Include="@(Libs->'%(FullPath)')" RelativePath="%(Libs.Identity)" TargetPath="%(Libs.Filename)%(Libs.Extension)" CopyToPublishDirectory="PreserveNewest" />
        </ItemGroup>
    </Target>
</Project>
